/*
  Each todo has a title and a description. The title is a string and the description is a string.
  Each todo should also get an unique autogenerated id every time it is created
  Implement a class `Todo` having below methods
    - add(todo): adds todo to list of todos
    - remove(indexOfTodo): remove todo from list of todos
    - update(index, updatedTodo): update todo at given index
    - getAll: returns all todos
    - get(indexOfTodo): returns todo at given index
    - clear: deletes all todos

  Once you've implemented the logic, test your code by running
  - `npm run test-todo-list`
*/

class Todo {
    constructor() {
        this.todos = [];
    }

    add(todo) {
        const newTodo = { ...todo, id: this.generateId() };
        this.todos.push(newTodo);
    }

    remove(idInput) {
        const index = this.todos.findIndex(function (item) {
            return item.id === idInput;
        });
        if (index >= 0 && index < this.todos.length) {
            this.todos.splice(index, 1);
        }else{
            return -1;
        }
    }

    update(idInput, updatedTodo) {
        const index = this.todos.findIndex(function (item) {
            return item.id === idInput;
        });
        if (index >= 0 && index < this.todos.length) {
            this.todos[index] = { ...updatedTodo, id: this.todos[index].id };
            return index;
        }else{
            return -1;
        }
    }

    getAll() {
        return this.todos;
    }

    get(idInput) {
        const indexOfTodo = this.todos.findIndex(function (item) {
            return item.id === idInput;
        });
        if (indexOfTodo >= 0 && indexOfTodo < this.todos.length) {
            return this.todos[indexOfTodo];
        }
        return null;
    }

    clear() {
        this.todos = [];
    }

    generateId() {
        const timestamp = new Date().getTime();
        const randomId = Math.floor(Math.random() * 1000);
        return `${timestamp}-${randomId}`;
    }
}



/**const myTodoList = new Todo();

myTodoList.add({ title: 'Task 1', description: 'Description 1' });
myTodoList.add({ title: 'Task 2', description: 'Description 2' });
myTodoList.add({ title: 'Task 3', description: 'Description 3' });

console.log(myTodoList.getAll()); // Output: [{ id: '...', title: 'Task 1', description: 'Description 1' }, ...]

myTodoList.update(0, { title: 'Updated Task 1', description: 'Updated Description 1' });
console.log(myTodoList.get(0)); // Output: { id: '...', title: 'Updated Task 1', description: 'Updated Description 1' }

myTodoList.remove(1);
console.log(myTodoList.getAll()); // Output: [{ id: '...', title: 'Updated Task 1', description: 'Updated Description 1' }, ...]

myTodoList.clear();
console.log(myTodoList.getAll()); // Output: []
*/




module.exports = Todo;
